[{"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/index.js":"1","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/App.js":"2","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/reportWebVitals.js":"3","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Store/store.js":"4","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/Login/Login.jsx":"5","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/Login/Style.js":"6","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Api/api.js":"7","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/AdminPanel.jsx":"8","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Header/Header.jsx":"9","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Header/Style.js":"10","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Goods.jsx":"11","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Style.js":"12","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/AddGoods/AddGoods.jsx":"13","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/AddGoods/ImageTemplate/ImageTemplate.jsx":"14","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/Good.jsx":"15","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/ImageToolTip/ImageToolTip.jsx":"16","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Functions/setAdminHeader.js":"17","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/style.js":"18","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/ImageToolTip/style.js":"19","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/styleList.js":"20","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Theme/Theme.js":"21","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/UpdateProduct/UpdateGood.jsx":"22","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Reducers/RequestProductList.js":"23","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Constants/RequestsTypes.js":"24","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Actions/Requests/productList.js":"25","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Middleware/apiMiddleware.js":"26"},{"size":708,"mtime":1611858964516,"results":"27","hashOfConfig":"28"},{"size":617,"mtime":1612792602942,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610132518998,"results":"30","hashOfConfig":"28"},{"size":494,"mtime":1612731640386,"results":"31","hashOfConfig":"28"},{"size":2603,"mtime":1611702013509,"results":"32","hashOfConfig":"28"},{"size":278,"mtime":1611261272861,"results":"33","hashOfConfig":"28"},{"size":434,"mtime":1612299172261,"results":"34","hashOfConfig":"28"},{"size":362,"mtime":1611345973113,"results":"35","hashOfConfig":"28"},{"size":1809,"mtime":1611263650105,"results":"36","hashOfConfig":"28"},{"size":183,"mtime":1611263623718,"results":"37","hashOfConfig":"28"},{"size":1668,"mtime":1612751879255,"results":"38","hashOfConfig":"28"},{"size":936,"mtime":1612215047776,"results":"39","hashOfConfig":"28"},{"size":8428,"mtime":1612732641037,"results":"40","hashOfConfig":"28"},{"size":853,"mtime":1612214737050,"results":"41","hashOfConfig":"28"},{"size":1496,"mtime":1612300186633,"results":"42","hashOfConfig":"28"},{"size":917,"mtime":1612216453369,"results":"43","hashOfConfig":"28"},{"size":231,"mtime":1611702258360,"results":"44","hashOfConfig":"28"},{"size":192,"mtime":1611744628487,"results":"45","hashOfConfig":"28"},{"size":142,"mtime":1611745014460,"results":"46","hashOfConfig":"28"},{"size":400,"mtime":1611775480539,"results":"47","hashOfConfig":"28"},{"size":251,"mtime":1611864711217,"results":"48","hashOfConfig":"28"},{"size":8899,"mtime":1612300800635,"results":"49","hashOfConfig":"28"},{"size":258,"mtime":1612732230107,"results":"50","hashOfConfig":"28"},{"size":51,"mtime":1612724238669,"results":"51","hashOfConfig":"28"},{"size":161,"mtime":1612731709008,"results":"52","hashOfConfig":"28"},{"size":392,"mtime":1612743125497,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"sa4eoe",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/index.js",[],["108","109"],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/App.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/reportWebVitals.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Store/store.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/Login/Login.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/Login/Style.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Api/api.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/AdminPanel.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Header/Header.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Header/Style.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Goods.jsx",["110","111","112"],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Style.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/AddGoods/AddGoods.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/AddGoods/ImageTemplate/ImageTemplate.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/Good.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/ImageToolTip/ImageToolTip.jsx",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Functions/setAdminHeader.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/style.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/ImageToolTip/style.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/Good/styleList.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Theme/Theme.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Components/AdminPanel/Goods/UpdateProduct/UpdateGood.jsx",["113"],"import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useStyles } from '../Style.js'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ImageTemplate from '../AddGoods/ImageTemplate/ImageTemplate.jsx'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport AddIcon from '@material-ui/icons/Add'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport Popover from '@material-ui/core/Popover'\nimport Badge from '@material-ui/core/Badge'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport '../Goods.css'\nimport api from '../../../../Api/api.js'\nimport shortid from 'shortid'\n\nfunction UpdateGood(props){\n  const [imageList, setImageList] = useState([])\n  const [productData, setProductData] = useState({})\n  const [addCategory, setAddCategory] = useState(null)\n  const [categoryList, setCategoryList] = useState([])\n  const [snackBarStatus, setSnackBarStatus] = useState({\n    error: false,\n    success: false\n  })\n\n  const titleOfCategory = [\n    'Свечи из натуральной вощины',\n    'Свечи литые из натурального воска',\n    'Свечи Контейнерные',\n    'Свечи интерьерные',\n    'Свечи свадебные',\n    'Свечи подарочные',\n    'Наборы для изготовления свечей своими руками',\n    'Свечи в торт',\n    'Свечи-цифры',\n    'Свечи с добавлением натуральных эфирных масел',\n    'Арома-свечи'\n  ]\n\n  const styles = useStyles()\n\n  useEffect(()=>{\n    if(props.updateDialogStatus === true){\n      let outContext = setTimeout(async () => {\n        console.log(window.location.search)\n        const url = new URLSearchParams(window.location.search)\n        const _id = url.get('id')\n        try {\n          let data = await api.product.get_by_id({_id})\n          console.log(data)\n        } catch (e) {\n          console.log(e)\n        }\n      })\n\n      return () => {\n        clearTimeout(outContext)\n      }\n    }\n  }, [props.updateDialogStatus])\n\n  const imageUpload = e => {\n    const file = e.target.files[0]\n    if(file){\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onload = event => {\n        setImageList([\n          ...imageList,\n          event.target.result\n        ])\n      }\n    }\n    e.target.value = ''\n  }\n\n  const deleteImage = index => {\n    setImageList(\n      imageList.filter((el, i) => index !== i)\n    )\n  }\n\n  const clearState = () => {\n    setProductData({})\n    setImageList([])\n  }\n\n  const closePopup = () => {\n    clearState()\n    props.setUpdateDialogStatus(false)\n  }\n\n  const handleChange = e => {\n    setProductData(\n      {\n        ...productData,\n        [e.target.name]: e.target.value\n      }\n    )\n  }\n\n  const snackBarChange = (success = false, error = false) => {\n    setSnackBarStatus({\n      error,\n      success\n    })\n  }\n\n  const addProduct = async () => {\n    try {\n      await api.product.add({\n        product: {\n          ...productData,\n          categories: categoryList,\n          in_stock: true\n        },\n        images: imageList,\n      })\n      closePopup()\n      snackBarChange(true)\n      props.getUpdateProductList()\n    } catch (e) {\n      snackBarChange(undefined, true)\n    }\n  }\n\n  const handleCategory = event => {\n    setAddCategory(event.currentTarget)\n  }\n\n  const showImageList = imageList.map((el, index) => (\n    <ImageTemplate image={el} index={index} key={shortid.generate()} deleteImage={deleteImage}/>\n  ))\n\n  const handleUpdateCategory = name => {\n    if(categoryList.indexOf(name) !== -1){\n      let arr = categoryList.filter(el => el !== name)\n      setCategoryList(arr)\n    } else {\n      setCategoryList([\n        ...categoryList,\n        name\n      ])\n    }\n  }\n\n  const titleCategoryShow = titleOfCategory.map((el, index) => (\n    <ListItem\n      button\n      onClick={() => handleUpdateCategory(el)}\n      key={shortid.generate()}>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          disableRipple\n          checked={categoryList.indexOf(el) !== -1}\n        >\n        </Checkbox>\n      </ListItemIcon>\n      <ListItemText edge=\"end\" primary={el}/>\n    </ListItem>\n  ))\n\n  return(\n    <>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackBarStatus.success}\n        onClose={() => snackBarChange()}\n        autoHideDuration={3000}\n      >\n        <Alert onClose={() => snackBarChange()} severity=\"success\" elevation={6} variant=\"filled\">\n          Товар был успешно обновлён.\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackBarStatus.error}\n        onClose={() => snackBarChange()}\n        autoHideDuration={3000}\n      >\n        <Alert onClose={() => snackBarChange()} severity=\"error\" elevation={6} variant=\"filled\">\n          Ошибка обновления товара.\n        </Alert>\n      </Snackbar>\n\n      <Dialog aria-labelledby=\"dialog-title\" onClose={closePopup} open={props.updateDialogStatus}>\n        <div className=\"add_product-popup\">\n          <DialogTitle id=\"dialog-title\">Обновление товара</DialogTitle>\n\n          <div className=\"add_product-wrapp\">\n            <div className=\"add_product-left_panel\">\n              <TextField onChange={handleChange} className={styles.inputText} label=\"Название товара\" name=\"name\" variant=\"outlined\" autoComplete=\"off\"/>\n              <TextField onChange={handleChange} className={styles.inputTextBottom} label=\"Цена в BYN\" name=\"price\" variant=\"outlined\" autoComplete=\"off\"/>\n              <div className={styles.addCategoryButtonWrapp}>\n                <Badge badgeContent={categoryList.length} color=\"primary\" className={styles.categoryBadge}>\n                  <Button onClick={handleCategory} aria-describedby=\"add_category\" variant=\"contained\" color=\"default\" className={styles.addCategoryButton}>\n                    Добавить категорию\n                  </Button>\n                </Badge>\n                <Popover\n                  id=\"add_category\"\n                  open={Boolean(addCategory)}\n                  anchorEl={addCategory}\n                  onClose={() => setAddCategory(null)}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                >\n                  <List>\n                    {titleCategoryShow}\n                  </List>\n                </Popover>\n              </div>\n            </div>\n            <div className=\"add_product-right_panel\">\n              <TextField\n                onChange={handleChange}\n                className={styles.inputText}\n                id=\"outlined-multiline-static\"\n                label=\"Описание товара\"\n                multiline\n                rows={8}\n                name=\"description\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n            </div>\n          </div>\n\n          <div className=\"add_product-image_list\">\n            <Tooltip title=\"Добавить изображение\" aria-label=\"add_image\">\n              <Card className={styles.card}>\n                <CardActions className={styles.addImageActions}>\n                  <Button variant=\"contained\" component=\"label\" className={styles.addImageButton} type=\"file\">\n                    <input type=\"file\" hidden accept=\".jpeg, .jpg, .png\" onChange={imageUpload}/>\n                    <AddIcon color=\"action\"/>\n                  </Button>\n                </CardActions>\n              </Card>\n            </Tooltip>\n\n            {showImageList}\n          </div>\n\n          <div className=\"add_product-popup_buttons\">\n            <Button variant=\"contained\" className={styles.leftButton} color=\"primary\" onClick={() => addProduct()}>Добавить</Button>\n            <Button variant=\"contained\" onClick={closePopup}>Отменить</Button>\n          </div>\n        </div>\n      </Dialog>\n    </>\n  )\n}\n\nexport default UpdateGood\n","/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Reducers/RequestProductList.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Constants/RequestsTypes.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Actions/Requests/productList.js",[],"/Users/sanya/Desktop/SvechiSharm/Project/svechisharm/src/Middleware/apiMiddleware.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":20,"column":10,"nodeType":"120","messageId":"121","endLine":20,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":20,"column":23,"nodeType":"120","messageId":"121","endLine":20,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":8,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"127","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'productSort' is assigned a value but never used.","Identifier","unusedVar","'setProductSort' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},[978,980],"[dispatch]"]